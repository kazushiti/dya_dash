#include <behaviors/default_layer.dtsi>
#include <behaviors/animation_trigger.dtsi>
#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/input/input-event-codes.h>
#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk_driver_animation/animation_control.h>
#include <dt-bindings/zmk_driver_animation/animation_trigger.h>
#include <input/processors.dtsi>
#include <zmk_driver_animation/animation.dtsi>
#include <zmk_driver_animation/animation_layer_status.dtsi>

#include "dya_dash-layouts.dtsi"

/ {
    chosen {
        zmk,physical-layout = &default_layout;
        zmk,animation = &animation_control;
        zmk,animation-control = &animation_control;
    };

    animation: animation {
        compatible = "zmk,animation";
        drivers = <&led_strip>;
        pixels = <&pixel 0 0>,
            <&pixel 1 0>,
            <&pixel 2 0>,
            <&pixel 3 0>;
        chain-lengths = <4>;
    };

    animations {
        /omit-if-no-ref/ animation_control: control {
            compatible = "zmk,animation-control";
            label = "ANIMATION_CTRL_0";
            powered-animations = <&endpoint_status_animation &rainbow_animation>;
            battery-animations = <&empty_animation>;
            behavior-animations = <&battery_status_animation &endpoint_status_animation &animation_layer_status>;
            init-animation = <&init_animation>;
            activation-animation = <&battery_status_animation>;
            activation-animation-duration-ms = <1000>;
            ext-power = <&led_power>;
        };
        /omit-if-no-ref/ init_animation: init {
            compatible = "zmk,animation-compose";
            animations = <&battery_status_animation &black_animation &endpoint_status_animation>;
            durations-ms = <1000 200 1000>;
        };
        /omit-if-no-ref/ black_animation: black {
            compatible = "zmk,animation-solid";
            pixels = <0 1 2 3>;
            colors = <HSL(0, 0, 0)>;
        };

        /omit-if-no-ref/ empty_animation: empty {
            compatible = "zmk,animation-empty";
            status = "okay";
        };
        /omit-if-no-ref/ rainbow_animation: rainbow {
            compatible = "zmk,animation-solid";
            status = "okay";
            pixels = <0 1 2 3>;
            colors = <HSL(0, 100, 50) HSL(60, 100, 50) HSL(120, 100, 50) HSL(180, 100, 50) HSL(240, 100, 50) HSL(300, 100, 50)>;
        };
        /omit-if-no-ref/ red_animation: red {
            compatible = "zmk,animation-solid";
            status = "okay";
            pixels = <0 1 2 3>;
            colors = <HSL(0, 100, 50)>;
        };
        /omit-if-no-ref/ endpoint_status_animation: endpoint_status {
            compatible = "zmk,animation-endpoint";
            status = "okay";
            pixels = <0 1 2 3>;
            color-open = <HSL(60, 100, 50)>;
            color-connected = <HSL(240, 100, 50)>;
            color-disconnected = <HSL(0, 100, 50)>;
            color-usb = <HSL(120, 100, 25)>;
        };
        /omit-if-no-ref/ battery_status_animation: battery_status {
            compatible = "zmk,animation-battery-status";
            status = "okay";
            pixels = <0 1 2 3>;
            color-high = <HSL(120, 100, 50)>; // green
            color-middle = <HSL(60, 100, 50)>; // yellow
            color-low = <HSL(0, 100, 50)>; // red
        };
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <6>;
        map = <
        // SW1, SW2, SW3, SW4, SW5, SW6,                               SW6, SW5, SW4, SW3, SW2, SW1,
        // 0 1 2 3 4 5                                                 6 7 8 9 10 11
        RC(0, 1) RC(0, 2) RC(0, 3) RC(0, 4) RC(0, 5) RC(1, 0)          RC(1, 6) RC(0, 11) RC(0, 10) RC(0, 9) RC(0, 8) RC(0, 7)
        // SW7, SW8, SW9, SW10, SW11, SW12,                            SW12, SW11, SW10, SW9, SW8, SW7,
        // 12 13 14 15 16 17                                           18 19 20 21 22 23
        RC(1, 2) RC(1, 3) RC(1, 4) RC(2, 0) RC(2, 1) RC(2, 3)          RC(2, 9) RC(2, 7) RC(2, 6) RC(1, 10) RC(1, 9) RC(1, 8)
        // SW13, SW14, SW15, SW16, SW17, SW18,                         SW18, SW17, SW16, SW15, SW14, SW13,
        // 24 25 26 27 28 29                                           30 31 32 33 34 35
        RC(2, 4) RC(3, 0) RC(3, 1) RC(3, 2) RC(3, 4) RC(4, 0)          RC(4, 6) RC(3, 10) RC(3, 8) RC(3, 7) RC(3, 6) RC(2, 10)
        // SW19, SW20, SW21, SW22, SW23                                SW23, SW22, SW21, SW20, // 21, 20 can be missing if trackball enabled
        // 36 37 38 39 40                                              41 42 (43 44)
        RC(4, 1) RC(4, 2) RC(4, 3) RC(5, 0) RC(5, 1)                   RC(5, 7) RC(5, 6) RC(4, 9) RC(4, 8)
        // SW24 for bluetooth, SW25 for USB                            // 4 arrow keys left up down right
        // 45 46                                                       47 48 49 50
        RC(5, 3) RC(5, 2)                                              RC(5, 8) RC(4, 7) RC(5, 10) RC(5, 9)
        // TOUCH1, TOUCH2, TOUCH3, TOUCH4                              // TOUCH1 (K) , TOUCH2 (L), TOUCH3 (O), TOUCH4 (sum finger)
        // 51 52 53 54                                                 55 56 57 58
        RC(2, 5) RC(1, 5) RC(3, 5) RC(4, 5)                            RC(1, 11) RC(2, 11) RC(3, 11) RC(4, 11)
        >;
    };

    kscan0: kscan_0 {
        compatible = "zmk,kscan-gpio-charlieplex";
        gpios
        = <&xiao_d 2 (GPIO_ACTIVE_HIGH)>
        , <&xiao_d 3 (GPIO_ACTIVE_HIGH)>
        , <&xiao_d 4 (GPIO_ACTIVE_HIGH)>
        , <&xiao_d 5 (GPIO_ACTIVE_HIGH)>
        , <&xiao_d 6 (GPIO_ACTIVE_HIGH)>
        , <&xiao_d 7 (GPIO_ACTIVE_HIGH)>
        ;
        wakeup-source;
        interrupt-gpios = <&xiao_d 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
    };
    led_power:led_power {
        compatible = "zmk,ext-power-transient";
        control-gpios = <&gpio0 9 (GPIO_ACTIVE_LOW)>; // NFC1
    };

    // Disabled default. Enabled by right-trackball snippet.
    trackball_listener: trackball_listener_0 {
        compatible = "zmk,input-listener";
        status = "disabled";
        // input-processors = <&zip_temp_layer 8 500>;
        trackball_scroller: scroller_0 {
            // layers = <9>;
            input-processors = <&zip_xy_scaler 1 50 &zip_xy_to_scroll_mapper>;
        };
    };
    // Enabled by default to support trackball on peripheral side.
    trackball_listener_l: trackball_listener_1 {
        compatible = "zmk,input-listener";
        device = <&peripheral_trackball>;
        // input-processors = <&zip_temp_layer 8 500>;
        trackball_scroller_l: scroller_1 {
            // layers = <9>;
            input-processors = <&zip_xy_scaler 1 50 &zip_xy_to_scroll_mapper>;
        };
    };

    split_inputs {
        #address-cells = <1>;
        #size-cells = <0>;

        peripheral_trackball: peripheral_trackball@0 {
            compatible = "zmk,input-split";
            reg = <0>;
        };
    };
};

// Use NFC pins as GPIOs
&uicr {
	nfct-pins-as-gpios;
};

//
// pinctrl for LED strip (SK6812-MINI-E)
//

&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 10)>; // NFC2
        };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 10)>;
            low-power-enable;
        };
    };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";

    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";
        reg = <0>;
        // Note: Frequency should be between 2.5MHz to 5MHz
        // 2.5MHz := 1sec / 0.4us
        //           where 0.4us is min (T0H max, T0L max, T1H max, T1L max)
        //                 T0H max = 0.4us, T1H max = 1.0us, T0L,T1L max = 20us
        // 5MHz := min(1sec / 0.2us, 1sec / 1.2us * 8bit)
        //           where 0.2us is min (T0H min, T0L min, T1H min, T1L min)
        //                               T0H min = 0.2us, T1L min = 0.2us, T1H min = 0.58us, T0L min = 0.8us
        //                 1.2us is T min
        //                 8bit is because this driver builds 1frame with 8bit (spi-one-frame, spi-zero-frame)
        spi-max-frequency = <4000000>; // 4MHz = 0.25us

        chain-length = <4>; /* number of LEDs */
        spi-one-frame = <0x70>;  // 01110000 -> T1H = 0.25 * 3 = 0.75us is between 0.58 and 1.0
        spi-zero-frame = <0x40>; // 01000000 -> T0H = 0.25us is between 0.2 and 0.4
        color-mapping = <LED_COLOR_ID_GREEN
                         LED_COLOR_ID_RED
                         LED_COLOR_ID_BLUE>;
    };
};

&animation_layer_status {
    pixels = <0 1 2 3>;
    default-color = <HSL(240, 100, 50)>;
    // default
    // windows blue
    // mac red
    // ios white
    // linux orange
    colors = <
        0
        HSL(193, 100, 47)
        HSL(0, 100, 40)
        HSL(0, 100, 100)
        HSL(29, 88, 51)
    >;
};

&zip_temp_layer {
    require-prior-idle-ms = <100>;
};

&vbatt {
    io-channels = <&adc 0>;
    power-gpios; // unset
    output-ohms = <470000>;
    full-ohms = <(1000000 + 470000)>;
    // For Ni-Mh 1U
    mv-to-pct-thresholds = <1100 1150 1200 1220 1240 1260 1280 1300 1320 1350 1400>;
};

&spi0 {
    trackball_r: trackball_r@0 {
        status = "disabled";
        reg = <0>;
    };
    trackball_l: trackball_l@1 {
        status = "disabled";
        reg = <0>;
    };
};